//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LuckParser.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LuckParser.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die .table th { border-top: 0; }
        ///
        ///.template {
        ///	opacity: 0.3333;
        ///	display: none;
        ///}
        ///td.sorting_1 {
        ///	background-color: rgba(39,128,227,0.05);
        ///}
        ///
        ///.table &gt; tfoot &gt; tr:first-child &gt; td, .table &gt; tfoot &gt; tr:last-child &gt; td {
        ///    border-top-width: 3px;
        ///}
        ///.table &gt; tfoot &gt; tr &gt; td {
        ///	color: #888;
        ///}
        ///
        ///
        ///
        ///table.dataTable.table-sm&gt;thead&gt;tr&gt;th {
        ///    padding-right: 10px;
        ///}
        ///
        ///table.dataTable.table-sm .sorting:before,
        ///table.dataTable.table-sm .sorting_asc:before,
        ///table.dataTable.table-sm .sorting_desc:befo [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string flomix_ei_css {
            get {
                return ResourceManager.GetString("flomix_ei_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die $.extend( $.fn.dataTable.defaults, {searching: false, ordering: true,paging: false,dom:&quot;t&quot;} );
        ///var urls = {
        ///	&apos;Warrior&apos;: &apos;https://wiki.guildwars2.com/images/4/43/Warrior_tango_icon_20px.png&apos;,
        ///	&apos;Berserker&apos;: &apos;https://wiki.guildwars2.com/images/d/da/Berserker_tango_icon_20px.png&apos;,
        ///	&apos;Spellbreaker&apos;: &apos;https://wiki.guildwars2.com/images/e/ed/Spellbreaker_tango_icon_20px.png&apos;,
        ///	&apos;Guardian&apos;: &apos;https://wiki.guildwars2.com/images/8/8c/Guardian_tango_icon_20px.png&apos;,
        ///	&apos;Dragonhunter&apos;: &apos;https://wiki.guildwars2.com/imag [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string flomix_ei_js {
            get {
                return ResourceManager.GetString("flomix_ei_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot;&gt;
        ///&lt;head&gt;
        ///&lt;meta charset=&quot;utf-8&quot;&gt;
        ///&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/bootswatch/4.1.1/${bootstrapTheme}/bootstrap.min.css&quot;  crossorigin=&quot;anonymous&quot;&gt;
        ///&lt;link href=&quot;https://fonts.googleapis.com/css?family=Open+Sans&quot; rel=&quot;stylesheet&quot;&gt;
        ///&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css&quot;&gt;
        ///&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;./flomix-style.css&quot;&gt;
        ///&lt;script src=&quot;https://code.jque [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string template_html {
            get {
                return ResourceManager.GetString("template_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;
        ///  &lt;thead&gt;
        ///    &lt;tr&gt;
        ///      &lt;th&gt;Sub&lt;/th&gt;
        ///      &lt;th&gt;&lt;/th&gt;
        ///      &lt;th&gt;Name&lt;/th&gt;
        ///      &lt;th&gt;
        ///        &lt;img src=&quot;https://wiki.guildwars2.com/images/9/95/Critical_Chance.png&quot; alt=&quot;Crits&quot; title=&quot;Percent time hits critical&quot; height=&quot;18&quot; width=&quot;18&quot;&gt;
        ///      &lt;/th&gt;
        ///      &lt;th&gt;
        ///        &lt;img src=&quot;https://wiki.guildwars2.com/images/2/2b/Superior_Rune_of_the_Scholar.png&quot; alt=&quot;Scholar&quot; title=&quot;Percent time hits while above 90% health&quot; hei [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string tmplDmgTable {
            get {
                return ResourceManager.GetString("tmplDmgTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;td&gt;{{:player.group}}&lt;/td&gt;
        ///&lt;td title=&quot;{{:player.profession}}&quot;&gt;&lt;img src=&quot;{{:player.icon}}&quot; alt=&quot;{{:player.profession}}&quot; height=&quot;18&quot; width=&quot;18&quot;&gt;&lt;span style=&quot;display:none&quot;&gt;{{:player.profession}}&lt;/span&gt;&lt;/td&gt;
        ///&lt;td&gt;{{:player.name}}&lt;/td&gt; ähnelt.
        /// </summary>
        internal static string tmplPlayerCells {
            get {
                return ResourceManager.GetString("tmplPlayerCells", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///	{{for tabs}}
        ///	{{if subtabs}}
        ///	&lt;li class=&quot;nav-item dropdown&quot;&gt;&lt;a class=&quot;nav-link dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; href=&quot;#&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;true&quot;&gt;{{:name}}&lt;/a&gt;
        ///		&lt;div class=&quot;dropdown-menu&quot; x-placement=&quot;bottom-start&quot;&gt;
        ///			{{for subtabs ~idPrefix=~idPrefix+#getIndex()+&quot;-&quot; tabindex=#getIndex()}}
        ///				&lt;a class=&quot;dropdown-item&quot; data-toggle=&quot;tab&quot; href=&quot;#{{:~idPrefix+#index}}&quot;&gt;{{if icon}}&lt;img src=&quot;{{:icon}}&quot; alt=&quot;{{:iconName}}&quot; title=&quot;{{:iconName} [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string tmplTabs {
            get {
                return ResourceManager.GetString("tmplTabs", resourceCulture);
            }
        }
    }
}
